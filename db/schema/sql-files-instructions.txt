# ToolShare Database Setup Instructions

# Connection Commands
# Connect to the database:
psql -U postgres -h localhost -d toolshare

# Run a specific SQL file:
psql -U postgres -h localhost -d toolshare -f db/scripts/rental-crud-operations-demo.sql

# Initial Database Setup
\i C:/Users/peepz/Desktop/Project/db-toolshare/db/schema/database_setup.sql

# Schema Setup
\i C:/Users/peepz/Desktop/Project/db-toolshare/db/schema/schema.sql
\i C:/Users/peepz/Desktop/Project/db-toolshare/db/schema/orders-schema.sql
\i C:/Users/peepz/Desktop/Project/db-toolshare/db/schema/payments-schema.sql

# Test Data
\i C:/Users/peepz/Desktop/Project/db-toolshare/db/test-data/test-data.sql
\i C:/Users/peepz/Desktop/Project/db-toolshare/db/test-data/insert_test_data.sql

# IMPORTANT: Testing CRUD Operations
# When running SQL files with parameter placeholders ($1, $2, etc.), you'll get errors like:
# "ERROR: there is no parameter $1"
#
# For demonstration purposes, use these demo files with real values instead:

# Rental Operations Demo Files (with real values)
# 1. Basic CRUD Operations Demo
\i C:/Users/peepz/Desktop/Project/db-toolshare/db/scripts/rental-crud-operations-demo.sql

# 2. Availability Operations Demo
\i C:/Users/peepz/Desktop/Project/db-toolshare/db/scripts/rental-availability-demo.sql

# 3. Payment Operations Demo
\i C:/Users/peepz/Desktop/Project/db-toolshare/db/scripts/rental-payment-operations-demo.sql

# 4. Analytics Operations Demo
\i C:/Users/peepz/Desktop/Project/db-toolshare/db/scripts/rental-analytics-demo.sql

# 5. Order Operations Demo
\i C:/Users/peepz/Desktop/Project/db-toolshare/db/scripts/order-crud-operations-demo.sql

# Rental Operations Reference Files (with placeholders - for reference only)
# 1. Basic CRUD Operations
\i C:/Users/peepz/Desktop/Project/db-toolshare/db/scripts/rental-crud-operations.sql

# 2. Availability Operations
\i C:/Users/peepz/Desktop/Project/db-toolshare/db/scripts/rental-availability.sql

# 3. Payment Operations
\i C:/Users/peepz/Desktop/Project/db-toolshare/db/scripts/rental-payment-operations.sql

# 4. Analytics
\i C:/Users/peepz/Desktop/Project/db-toolshare/db/scripts/rental-analytics.sql

# Order Operations
\i C:/Users/peepz/Desktop/Project/db-toolshare/db/scripts/order-crud-operations.sql

# Alternative ways to run SQL files:
# 1. Connect to the database first:
#    psql -U postgres -h localhost -d toolshare
# 
# 2. Then run files from within psql:
#    \i C:/Users/peepz/Desktop/Project/db-toolshare/db/scripts/rental-crud-operations-demo.sql
#
# 3. Or run individual queries by copying them into the psql console

# Sample CRUD Testing Queries (Copy and paste these into psql)
# 1. Create a new rental:
INSERT INTO rentals (tool_id, renter_id, start_date, end_date, status, total_price)
VALUES (1, 1, '2025-04-01', '2025-04-05', 'pending', 100.00) RETURNING *;

# 2. Get rental by ID:
SELECT r.*, t.name as tool_name, u.username as renter_name
FROM rentals r
JOIN tools t ON r.tool_id = t.id
JOIN users u ON r.renter_id = u.id
WHERE r.id = 1;

# 3. Get rentals by user ID:
SELECT r.*, t.name as tool_name, u.username as renter_name
FROM rentals r
JOIN tools t ON r.tool_id = t.id
JOIN users u ON r.renter_id = u.id
WHERE r.renter_id = 1
ORDER BY r.created_at DESC;

# 4. Update rental status:
UPDATE rentals
SET status = 'active'
WHERE id = 1
RETURNING *;

# 5. Cancel rental:
UPDATE rentals
SET status = 'cancelled'
WHERE id = 1
RETURNING *;